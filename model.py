# -*- coding: utf-8 -*-
"""model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10gqo5qcu5viXUJdVOr3DkAMFfKt-oMlI
"""

import pandas as pd
df=pd.read_csv("Student_performance_data _.csv")
df.head()

df.columns=df.columns.str.strip()

df

from google.colab import drive
drive.mount('/content/drive')

df=df[["StudentID","GPA","Age","StudyTimeWeekly"]].copy()
df

df

df.describe().T

df.isnull().sum()

df.drop_duplicates(subset="StudentID", keep="first", inplace=True)
df

df["HoursPerDay"]=df["StudyTimeWeekly"]/7
df

df.to_csv("cleaned_data_students.csv",index=False)
import numpy as np
from sklearn.metrics import mean_squared_error
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

df=pd.read_csv("cleaned_data_students.csv")
df["score"]=df["GPA"]*25
df

x=df[["HoursPerDay"]]
y=df["GPA"]
x_train,x_test,y_train,y_test=train_test_split(x, y,test_size=0.3,random_state=42)
linear_model = LinearRegression()
linear_model.fit(x_train, y_train)
y_pred=linear_model.predict(x_test)

# print(f"predicited test score{y_pred[0]}")

mse = mean_squared_error(y_test,y_pred)
print(f"Mean Squared Error: {mse:.2f}")
import joblib
joblib.dump(linear_model, 'sample_data/gpa_prediction_model.pkl')

# max_gpa = 4
# capped_test_score = min(test_score[0], max_gpa)
# print(capped_test_score)

mse = mean_squared_error(y_test,y_pred)
print(f"Mean Squared Error: {mse:.2f}")

df["GPA"].max()

df["score"].max()

